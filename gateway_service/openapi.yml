openapi: 3.0.0
info:
  title: Post Service API
  version: 1.0.0
  description: API for managing blog posts

servers:
  - url: http://posts_service/posts/v1/

paths:
  /create_post:
    post:
      tags: [Posts]
      summary: Create a new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostRequest'
      responses:
        '200':
          description: Post created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /feed:
    get:
      tags: [Posts]
      summary: List posts
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_limit'
        - $ref: '#/components/parameters/with_hidden'
      responses:
        '200':
          description: List of posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPostsResponse'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '500':
          description: Internal server error

  /posts/{post_id}:
    get:
      tags: [Posts]
      summary: Get a post by ID
      parameters:
        - $ref: '#/components/parameters/post_id'
      responses:
        '200':
          description: Post details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '403':
          description: Forbidden
        '404':
          description: Post not found
        '500':
          description: Internal server error

    post:
      tags: [Posts]
      summary: Update a post
      parameters:
        - $ref: '#/components/parameters/post_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUpdate'
      responses:
        '200':
          description: Post updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Post not found
        '500':
          description: Internal server error

    delete:
      tags: [Posts]
      summary: Delete a post
      parameters:
        - $ref: '#/components/parameters/post_id'
      responses:
        '200':
          description: Post deleted
          content:
            text/plain:
              schema:
                type: string
              example:
                "post 123e4567-e89b-12d3-a456-426614174000 deleted"
        '403':
          description: Forbidden
        '404':
          description: Post not found
        '500':
          description: Internal server error

components:
  schemas:
    Post:
      type: object
      properties:
        post_id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
        title:
          type: string
          example: "My First Post"
        content:
          type: string
          example: "This is the content of my post"
        is_private:
          type: boolean
          example: false
        tags:
          type: array
          items:
            type: string
          example: ["tech", "blog"]
        author_id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        publish_date:
          type: string
          format: date-time
          example: "2023-04-01T12:00:00Z"
        last_modify:
          type: string
          format: date-time
          example: "2023-04-01T12:30:00Z"

    PostUpdate:
      type: object
      properties:
        new_title:
          type: string
        new_content:
          type: string
        is_private:
          type: boolean
        change_private:
          type: boolean
        add_tags:
          type: array
          items:
            type: string
        remove_tags:
          type: array
          items:
            type: string
    CreatePostRequest:
      type: object
      required: [title, content]
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        content:
          type: string
          minLength: 1
        is_private:
          type: boolean
          default: false
        tags:
          type: array
          items:
            type: string

    DeletePostResponse:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Code'
        error:
          type: string

    GetPostRequest:
      type: object
      required: [id]
      properties:
        id:
          type: string
          format: uuid

    ListPostsRequest:
      type: object
      properties:
        page:
          type: integer
          minimum: 0
          default: 0
        page_limit:
          type: integer
          minimum: 0
          default: 10
        with_hidden:
          type: boolean
          default: false

    ListPostsResponse:
      type: object
      properties:
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Post'
        from:
          type: integer
        to:
          type: integer
        total:
          type: integer

    Code:
      type: integer
      enum: [0, 200, 400, 403, 404]
      description: |
        0 - Bad
        200 - Ok
        400 - BadRequest
        403 - Forbidden
        404 - NotFound

  parameters:
    post_id:
      name: post_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: Post ID

    page:
      name: page
      in: query
      schema:
        type: integer
        minimum: 1
        default: 1
      description: Page number

    page_limit:
      name: page_limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 10
      description: Number of items per page

    with_hidden:
      name: with_hidden
      in: query
      schema:
        type: boolean
        default: false
      description: Include hidden posts
